/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* ReverseList(ListNode *h,int count)
    {
        if(h==NULL ||h->next==NULL && count==1){
        return h;
        }
        
        ListNode *prev=NULL;
        ListNode *cur=h,*present=h;
        ListNode *nex;
        
        while(count>0)
        {
            nex=cur->next;
            cur->next=prev;
            prev=cur;
            cur=nex;
            count--;
            
        }
        
        present->next=nex;
        
        
        return prev;
    }
    
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        int c=n-m+1;
        ListNode *t=head;
        int m1=m-2;
        
        
        while(m1>0){
        t=t->next;
        m1--;
        }
        
        ListNode *t1;
        
        if(m<=1){
        t1=ReverseList(t,c);
        head=t1;
        }
        else{
        t1=ReverseList(t->next,c);
        t->next=t1;
        }
        
        return head;
        
        
    }
};
