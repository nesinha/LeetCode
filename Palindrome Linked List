/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
    
public:
         
    bool isPalindrome(ListNode* head) {
        
        if(head==NULL)
        return true;
        
        if(head->next==NULL)
        return true;
        
        ListNode* fast = head;
        ListNode* slow = head;
        
        while(fast!=NULL)
        {
            slow=slow->next;
            if(fast->next!=NULL)
            fast=fast->next->next;
            else
            break;
        }
        
        ListNode *prev=NULL;
        ListNode *cur=slow;
        ListNode *nex=cur->next;
        
        while(cur!=NULL)
        {
            cur->next=prev;
            prev=cur;
            cur=nex;
            if(cur!=NULL)
            nex=cur->next;
        }
        
        slow=prev;
        fast=head;
        
        while(slow!=NULL)
        {
            if(fast->val!=slow->val)
            return false;
            
            fast=fast->next;
            slow=slow->next;
        }
        
        return true;
        
    }
};
