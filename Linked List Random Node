/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
        ListNode *headNode;
        
    Solution(ListNode* head) {
        headNode=head;
        
    }
    
    /** Returns a random node's value. */
    
    int getRandom() {
        
        int res=headNode->val;
        ListNode *nex=headNode->next;
        int start=2;
        while(nex)
        {
            int num=rand()%start;
            if(num==0)
                res=nex->val; 
            start++;
            nex=nex->next;
            
        }
        
        return res;
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
