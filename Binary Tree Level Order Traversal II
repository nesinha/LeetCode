/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode *root)
    {
        vector<int> leveleach;
        vector<vector<int>> res;
        
        if(root==NULL)
        return res;
        
        queue<TreeNode *> q;
        
        q.push(root);
        q.push(NULL);
        
        while(!q.empty())
        {
            TreeNode *temp=q.front();
            q.pop();
            
            if(temp==NULL)
            {
             res.push_back(leveleach);
             leveleach.resize(0);
             if(q.size()>0)
             q.push(NULL);
            }
            else
            {
                leveleach.push_back(temp->val);
                if(temp->left!=NULL)
                {
                    q.push(temp->left);
                }
                if(temp->right!=NULL)
                {
                    q.push(temp->right);
                }
            }
        }
        
        return res;
        
    }
    
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
        res=levelOrder(root);
        reverse(res.begin(),res.end());
        
        return res;
    }
};

