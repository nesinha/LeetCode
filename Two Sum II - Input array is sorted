class Solution {
public:
    
    int find(int start, int end, int num,vector<int>& numbers)
    {
        int mid= (start+end)/2;
        
        if(start<=end)
        {
        if(numbers[mid]==num)
        return mid+1;
        
        else if(numbers[mid]>num)
        return(find(start,mid-1,num,numbers));
        
        else if(numbers[mid]<num)
        return(find(mid+1,end,num,numbers));
        }
        return -1;
    }

    vector<int> twoSum(vector<int>& numbers, int target) {
        
        vector<int> res;
        
        for(int i=0;i<numbers.size()-1;i++)
        {
            int findnum=target-numbers[i];
            int pos2=find(i+1,numbers.size()-1,findnum,numbers);
            if(pos2!=-1)
            {
                res.push_back(i+1);
                res.push_back(pos2);
                return res;
            }
        }
        
        return res;
    }
};
